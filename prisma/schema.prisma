// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id              String    @id
  email           String    @unique
  profiles        Profile[]
}

model Profile {
  id            Int            @id @default(autoincrement())
  user          User           @relation(fields: [userId], references: [id])
  userId        String
  name          String
  selected      Boolean
  image         String?
  displayEmail  String?
  description   String?
  // Many-Many self relation
  contacts      Profile[]      @relation("UserContacts")
  contactsOf    Profile[]      @relation("UserContacts")
  ////
  conversations Conversation[]
  seenMessages  Message[]      @relation("Seen")
  messages      Message[]
}

model Conversation {
  id            Int       @id @default(autoincrement())
  created       DateTime  @default(now())
  lastMessageAt DateTime  @default(now())
  isGroup       Boolean?
  name          String?
  people        Profile[]
  messages      Message[]
}

model Message {
  id             Int          @id @default(autoincrement())
  created        DateTime     @default(now())
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId Int
  sender         Profile      @relation(fields: [profileId], references: [id])
  profileId      Int
  seen           Profile[]    @relation("Seen")
  body           String?
  image          String?
}
